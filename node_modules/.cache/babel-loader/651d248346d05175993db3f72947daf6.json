{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport let TypePhase;\n\n(function (TypePhase) {\n  TypePhase[TypePhase[\"Typing\"] = 0] = \"Typing\";\n  TypePhase[TypePhase[\"Pausing\"] = 1] = \"Pausing\";\n  TypePhase[TypePhase[\"Deleting\"] = 2] = \"Deleting\";\n})(TypePhase || (TypePhase = {}));\n\nconst TYPING_INTERVAL_MIN = 80;\nconst TYPING_INTERVAL_MAX = 150;\nconst TYPING_PAUSE_MS = 2000;\nconst DELETING_INTERVAL = 50;\nconst DELETING_PAUSE_MS = 500;\n\nconst getRandomTypingInterval = () => Math.floor(Math.random() * (TYPING_INTERVAL_MAX - TYPING_INTERVAL_MIN + 1)) + TYPING_INTERVAL_MIN;\n\nexport const useTypeEffect = superpowers => {\n  _s();\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [phase, setPhase] = useState(TypePhase.Typing);\n  const [typedSuperpower, setTypedSuperpower] = useState(\"\");\n  useEffect(() => {\n    switch (phase) {\n      case TypePhase.Typing:\n        {\n          const nextTypedSuperPower = superpowers[selectedIndex].slice(0, typedSuperpower.length + 1);\n\n          if (nextTypedSuperPower === typedSuperpower) {\n            setPhase(TypePhase.Pausing);\n            return;\n          }\n\n          const timeout = setTimeout(() => {\n            setTypedSuperpower(nextTypedSuperPower);\n          }, getRandomTypingInterval());\n          return () => clearTimeout(timeout);\n        }\n\n      case TypePhase.Deleting:\n        {\n          if (!typedSuperpower) {\n            const timeout = setTimeout(() => {\n              const nextIndex = selectedIndex + 1;\n              setSelectedIndex(superpowers[nextIndex] ? nextIndex : 0);\n              setPhase(TypePhase.Typing);\n            }, DELETING_PAUSE_MS);\n            return () => clearTimeout(timeout);\n          }\n\n          const nextRemaining = superpowers[selectedIndex].slice(0, typedSuperpower.length - 1);\n          const timeout = setTimeout(() => {\n            setTypedSuperpower(nextRemaining);\n          }, DELETING_INTERVAL);\n          return () => clearTimeout(timeout);\n        }\n\n      case TypePhase.Pausing:\n      default:\n        const timeout = setTimeout(() => {\n          setPhase(TypePhase.Deleting);\n        }, TYPING_PAUSE_MS);\n        return () => clearTimeout(timeout);\n    }\n  }, [superpowers, typedSuperpower, selectedIndex, phase]);\n  return {\n    typedSuperpower,\n    phase,\n    selectedSuperpower: superpowers[selectedIndex]\n  };\n};\n\n_s(useTypeEffect, \"3IpGlDJA9lHBQHrJH60wJ9+34KM=\");","map":{"version":3,"names":["useEffect","useState","TypePhase","TYPING_INTERVAL_MIN","TYPING_INTERVAL_MAX","TYPING_PAUSE_MS","DELETING_INTERVAL","DELETING_PAUSE_MS","getRandomTypingInterval","Math","floor","random","useTypeEffect","superpowers","selectedIndex","setSelectedIndex","phase","setPhase","Typing","typedSuperpower","setTypedSuperpower","nextTypedSuperPower","slice","length","Pausing","timeout","setTimeout","clearTimeout","Deleting","nextIndex","nextRemaining","selectedSuperpower"],"sources":["C:/Users/92475/OneDrive/桌面/react/src/components/TypeWriter/useTypeEffect.jsx"],"sourcesContent":["import {useEffect, useState } from \"react\"\r\n\r\nexport let TypePhase\r\n\r\n(function(TypePhase) {\r\n  TypePhase[(TypePhase[\"Typing\"] = 0)] = \"Typing\"\r\n  TypePhase[(TypePhase[\"Pausing\"] = 1)] = \"Pausing\"\r\n  TypePhase[(TypePhase[\"Deleting\"] = 2)] = \"Deleting\"\r\n})(TypePhase || (TypePhase = {}))\r\n\r\nconst TYPING_INTERVAL_MIN = 80\r\nconst TYPING_INTERVAL_MAX = 150\r\nconst TYPING_PAUSE_MS = 2000\r\nconst DELETING_INTERVAL = 50\r\nconst DELETING_PAUSE_MS = 500\r\n\r\nconst getRandomTypingInterval = () =>\r\n  Math.floor(Math.random() * (TYPING_INTERVAL_MAX - TYPING_INTERVAL_MIN + 1)) +\r\n  TYPING_INTERVAL_MIN\r\n\r\nexport const useTypeEffect = superpowers => {\r\n  const [selectedIndex, setSelectedIndex] = useState(0)\r\n  const [phase, setPhase] = useState(TypePhase.Typing)\r\n  const [typedSuperpower, setTypedSuperpower] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    switch (phase) {\r\n      case TypePhase.Typing: {\r\n        const nextTypedSuperPower = superpowers[selectedIndex].slice(\r\n          0,\r\n          typedSuperpower.length + 1\r\n        )\r\n\r\n        if (nextTypedSuperPower === typedSuperpower) {\r\n          setPhase(TypePhase.Pausing)\r\n          return\r\n        }\r\n\r\n        const timeout = setTimeout(() => {\r\n          setTypedSuperpower(nextTypedSuperPower)\r\n        }, getRandomTypingInterval())\r\n\r\n        return () => clearTimeout(timeout)\r\n      }\r\n      case TypePhase.Deleting: {\r\n        if (!typedSuperpower) {\r\n          const timeout = setTimeout(() => {\r\n            const nextIndex = selectedIndex + 1\r\n            setSelectedIndex(superpowers[nextIndex] ? nextIndex : 0)\r\n            setPhase(TypePhase.Typing)\r\n          }, DELETING_PAUSE_MS)\r\n          return () => clearTimeout(timeout)\r\n        }\r\n\r\n        const nextRemaining = superpowers[selectedIndex].slice(\r\n          0,\r\n          typedSuperpower.length - 1\r\n        )\r\n\r\n        const timeout = setTimeout(() => {\r\n          setTypedSuperpower(nextRemaining)\r\n        }, DELETING_INTERVAL)\r\n\r\n        return () => clearTimeout(timeout)\r\n      }\r\n      case TypePhase.Pausing:\r\n      default:\r\n        const timeout = setTimeout(() => {\r\n          setPhase(TypePhase.Deleting)\r\n        }, TYPING_PAUSE_MS)\r\n\r\n        return () => clearTimeout(timeout)\r\n    }\r\n  }, [superpowers, typedSuperpower, selectedIndex, phase])\r\n\r\n  return {\r\n    typedSuperpower,\r\n    phase,\r\n    selectedSuperpower: superpowers[selectedIndex]\r\n  }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}